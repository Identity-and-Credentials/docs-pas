---
title: VMware Tanzu Application Service for VMs v4.0 Release Notes
owner: Release Engineering
---

This topic contains release notes for <%= vars.app_runtime_first %> <%= vars.v_major_version %>.

<%= vars.app_runtime_abbr %> is certified by the Cloud Foundry Foundation for 2023.

For more information about the Cloud Foundry Certified Provider Program, see [How Do I Become a
Certified Provider?](https://www.cloudfoundry.org/certified-platforms-how-to/) on the Cloud Foundry
website.

Because VMware uses the Percona Distribution for MySQL, expect a time lag between Oracle releasing a
MySQL patch and VMware releasing <%= vars.app_runtime_abbr %> containing that patch.

<hr>

## <a id='releases'></a> Releases

### <a id='4.0.0'></a> 4.0.0

**Release Date:** 04/18/2023

* **[Security Fix]** Bump Apps Manager to address [CVE-2022-24999](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-24999), [CVE-2022-25881](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-25881), and [CVE-2023-23936](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-23936)
* **[Security Fix]** Fix BBR scripts and bump spring-boot to address [CVE-2023-20860](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-20860) and [CVE-2023-20861](https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2023-20861)
* **[Feature]** Operators can choose if cflinuxfs4 is the default or the only stack option for apps.
* **[Feature]** Operators can allow app developers to use beta Web Servers Buildpack based on Cloud-Native Web Servers Buildpack.
* **[Feature]** Supports TAS login via external OIDC providers.
* **[Feature]** Add TAS Portal - a backstage instance with TAS resources, App Accelerator, and other plug-ins.
* **[Feature]** Update metric tags in Diego when an application is renamed.
* **[Feature Improvement]** Increase SSO service redirect URI length limitation.
* **[Breaking Change]** Remove Ruby and Python from the `cflinuxfs4` stack.
* **[Breaking Change]** Remove deprecated global log rate limit
* Bump backup-and-restore-sdk to version `1.18.61`
* Bump bpm to version `1.1.21`
* Bump cf-autoscaling to version `249.1.6`
* Bump credhub to version `2.12.21`
* Bump garden-runc to version `1.25.0`
* Bump log-cache to version `3.0.0`
* Bump loggregator to version `107.0.2`
* Bump loggregator-agent to version `7.1.2`
* Bump metrics-discovery to version `3.2.7`
* Bump mysql-monitoring to version `9.23.0`
* Bump nfs-volume to version `7.1.9`
* Bump push-tas-portal-release to version `0.1.5`
* Bump push-offline-docs-release to version `4.0.24`
* Bump push-usage-service-release to version `674.0.36`
* Bump pxc to version `1.0.8`
* Bump routing to version `0.261.0`
* Bump web-servers-cnb-buildpack to version `0.0.4`
* Bump smb-volume to version `3.1.10`
* Bump staticfile-offline-buildpack to version `1.6.1`
* Bump statsd-injector to version `1.11.28`
* Bump uaa to version `76.8.0`

<table border="1" class="nice">
  <thead>
    <tr>
      <th>Component</th>
      <th>Version</th>
      <th>Release Notes</th>
    </tr>
  </thead>
  <tbody>
    <tr><td>ubuntu-jammy stemcell</td><td>1.95</td><td></td></tr>
    <tr><td>backup-and-restore-sdk</td><td>1.18.61</td><td></td></tr>
    <tr><td>binary-offline-buildpack</td><td>1.1.3</td><td></td></tr>
    <tr><td>bosh-dns-aliases</td><td>0.0.4</td><td></td></tr>
    <tr><td>bpm</td><td>1.1.21</td><td></td></tr>
    <tr><td>capi</td><td>1.148.0</td><td></td></tr>
    <tr><td>cf-autoscaling</td><td>249.1.6</td><td></td></tr>
    <tr><td>cf-cli</td><td>1.44.0</td><td></td></tr>
    <tr><td>cf-networking</td><td>3.23.0</td><td></td></tr>
    <tr><td>cflinuxfs3</td><td>0.361.0</td><td></td></tr>
    <tr><td>cflinuxfs4</td><td>1.5.0</td><td></td></tr>
    <tr><td>credhub</td><td>2.12.21</td><td></td></tr>
    <tr><td>diego</td><td>2.73.0</td><td></td></tr>
    <tr><td>dotnet-core-offline-buildpack</td><td>2.4.9</td><td></td></tr>
    <tr><td>garden-runc</td><td>1.25.0</td><td></td></tr>
    <tr><td>go-offline-buildpack</td><td>1.10.6</td><td></td></tr>
    <tr><td>java-offline-buildpack</td><td>4.56</td><td></td></tr>
    <tr><td>log-cache</td><td>3.0.0</td><td></td></tr>
    <tr><td>loggregator</td><td>107.0.2</td>
      <td>
        <details>
          <summary>v107.0.2</summary>
          <pre style="max-width: 30em">
  * update golang to 1.20.1
  **Full Changelog**: https://github.com/cloudfoundry/loggregator-release/compare/v107.0.1...v107.0.2
          </pre>
        </details>
        <details>
          <summary>v107.0.1</summary>
          <pre style="max-width: 30em">
  ## What's Changed
  * Upgrade to go 1.20 by @rroberts2222 in https://github.com/cloudfoundry/loggregator-release/pull/524
  * update dependencies
  ## New Contributors
  * @stefanlay made their first contribution in https://github.com/cloudfoundry/loggregator-release/pull/519
  **Full Changelog**: https://github.com/cloudfoundry/loggregator-release/compare/v107.0.0...v107.0.1
          </pre>
        </details>
        <details>
          <summary>v107.0.0</summary>
          <pre style="max-width: 30em">
  Remove RecentLogsHandler from Traffic Controller. Traffic Controller has been providing recent logs as a fallback for environments/tools which had not moved to retrieving recent logs directly from Log Cache. With this change older versions of the cf CLI v6 will no longer be able to retrieve recent logs from Cloud Foundry.
  We are making this change as Log Cache has been the correct way of retrieving these logs for many years and the legacy support was causing issues with the splitting out of Log Cache from Dopplers.
  ## What's Changed
  * Remove RecentLogsHandler by @rroberts2222 in https://github.com/cloudfoundry/loggregator-release/pull/486
  * Bump golang.org/x/net from 0.3.0 to 0.4.0 in /src by @dependabot in https://github.com/cloudfoundry/loggregator-release/pull/487
  * Delete unused manifests & scripts, clean up README by @rroberts2222 in https://github.com/cloudfoundry/loggregator-release/pull/488
  * fix go module path by @Benjamintf1 in https://github.com/cloudfoundry/loggregator-release/pull/490
  **Full Changelog**: https://github.com/cloudfoundry/loggregator-release/compare/v106.7.5...v107.0.0
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>loggregator-agent</td><td>7.1.2</td>
      <td>
        <details>
          <summary>v7.1.2</summary>
          <pre style="max-width: 30em">
  ## What's Changed
  * update to golang 1.20.1
  **Full Changelog**: https://github.com/cloudfoundry/loggregator-agent-release/compare/v7.1.1...v7.1.2
          </pre>
        </details>
        <details>
          <summary>v7.1.1</summary>
          <pre style="max-width: 30em">
  ## What's Changed
  * update dependencies
  * Add error messages for better traceability of filtered out syslog drain bindings by @chombium in https://github.com/cloudfoundry/loggregator-agent-release/pull/216
  * Upgrade to go 1.20 by @rroberts2222 in https://github.com/cloudfoundry/loggregator-agent-release/pull/223
  **Full Changelog**: https://github.com/cloudfoundry/loggregator-agent-release/compare/v7.1.0...v7.1.1
          </pre>
        </details>
        <details>
          <summary>v7.1.0</summary>
          <pre style="max-width: 30em">
  ## What's Changed
  * Add app-id and drain url in the error message by @chombium in https://github.com/cloudfoundry/loggregator-agent-release/pull/212
  ## New Contributors
  * @chombium made their first contribution in https://github.com/cloudfoundry/loggregator-agent-release/pull/212
  **Full Changelog**: https://github.com/cloudfoundry/loggregator-agent-release/compare/v7.0.2...v7.1.0
          </pre>
        </details>
        <details>
          <summary>v7.0.2</summary>
          <pre style="max-width: 30em">
  ## What's Changed
  * Sanitize ProcID in syslog messages so messages with utf-8 in the source_type are not dropped by @Benjamintf1 in https://github.com/cloudfoundry/loggregator-agent-release/pull/200
  * Update dependencies
  **Full Changelog**: https://github.com/cloudfoundry/loggregator-agent-release/compare/v7.0.1...v7.0.2
          </pre>
        </details>
        <details>
          <summary>v7.0.1</summary>
          <pre style="max-width: 30em">
  ## What's Changed
  * Fix: anonymize URL in syslog drain logs and metrics by @ctlong in https://github.com/cloudfoundry/loggregator-agent-release/pull/186
  **Full Changelog**: https://github.com/cloudfoundry/loggregator-agent-release/compare/v7.0.0...v7.0.1
          </pre>
        </details>
        <details>
          <summary>v7.0.0</summary>
          <pre style="max-width: 30em">
  ## What's Changed
  * Allow application developers to set client certs and keys, as well as server cas, to be used for authentication in syslog-tls drains by @fhambrec, @dark5un in https://github.com/cloudfoundry/loggregator-agent-release/pull/177 / https://github.com/cloudfoundry/loggregator-agent-release/pull/119. Breaking change: requires new version of capi
  * Add drain scope and url tags to syslog egress metrics by @skaur20 in https://github.com/cloudfoundry/loggregator-agent-release/pull/123, Breaking change: might effect metrics dashboards and calculations.
  ## New Contributors
  * @skaur20 made their first contribution in https://github.com/cloudfoundry/loggregator-agent-release/pull/123
  **Full Changelog**: https://github.com/cloudfoundry/loggregator-agent-release/compare/v6.5.6...v7.0.0
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>mapfs</td><td>1.2.13</td><td></td></tr>
    <tr><td>metric-registrar</td><td>2.1.3</td><td></td></tr>
    <tr><td>metrics-discovery</td><td>3.2.7</td><td></td></tr>
    <tr><td>mysql-monitoring</td><td>9.23.0</td><td></td></tr>
    <tr><td>nats</td><td>56.1.0</td><td></td></tr>
    <tr><td>nfs-volume</td><td>7.1.9</td><td></td></tr>
    <tr><td>nginx-offline-buildpack</td><td>1.2.1</td><td></td></tr>
    <tr><td>nodejs-offline-buildpack</td><td>1.8.8</td><td></td></tr>
    <tr><td>notifications</td><td>62</td><td></td></tr>
    <tr><td>notifications-ui</td><td>40</td><td></td></tr>
    <tr><td>php-offline-buildpack</td><td>4.6.3</td><td></td></tr>
    <tr><td>push-apps-manager-release</td><td>677.0.18</td><td></td></tr>
    <tr><td>push-tas-portal-release</td><td>0.1.5</td><td></td></tr>
    <tr><td>push-offline-docs-release</td><td>4.0.24</td><td></td></tr>
    <tr><td>push-usage-service-release</td><td>674.0.36</td><td></td></tr>
    <tr><td>pxc</td><td>1.0.8</td><td></td></tr>
    <tr><td>python-offline-buildpack</td><td>1.8.8</td><td></td></tr>
    <tr><td>r-offline-buildpack</td><td>1.2.0</td><td></td></tr>
    <tr><td>routing</td><td>0.261.0</td><td></td></tr>
    <tr><td>ruby-offline-buildpack</td><td>1.9.4</td><td></td></tr>
    <tr><td>web-servers-cnb-buildpack</td><td>0.0.4</td><td></td></tr>
    <tr><td>silk</td><td>3.23.0</td><td></td></tr>
    <tr><td>smb-volume</td><td>3.1.10</td><td></td></tr>
    <tr><td>smoke-tests</td><td>4.8.2</td><td></td></tr>
    <tr><td>staticfile-offline-buildpack</td><td>1.6.1</td>
      <td>
        <details>
          <summary>1.6.1</summary>
          <pre style="max-width: 30em">
  * Don't use ERB to template nginx.conf
  * Bump github.com/onsi/gomega from 1.27.2 to 1.27.4
  * Bump github.com/onsi/gomega from 1.27.1 to 1.27.2
  Packaged binaries:
  | name | version | cf_stacks |
  |-|-|-|
  | nginx | 1.22.1 | cflinuxfs3 |
  | nginx | 1.22.1 | cflinuxfs4 |
  | nginx | 1.23.3 | cflinuxfs3 |
  | nginx | 1.23.3 | cflinuxfs4 |
  Default binary versions:
  | name | version |
  |-|-|
  | nginx | 1.23.x |
  * Uncached buildpack SHA256: e34771e5c23a0e83e3d151137fe60b8ec8cf51ea07eeb50e06532d6b52b272ba
  * Uncached buildpack SHA256: a5bd0559590511a00300f11f5d96fb22704211735708ed83d2024afe141ead25
          </pre>
        </details>
      </td>
    </tr>
    <tr><td>statsd-injector</td><td>1.11.28</td><td></td></tr>
    <tr><td>syslog</td><td>12.1.3</td><td></td></tr>
    <tr><td>system-metrics-scraper</td><td>3.3.6</td><td></td></tr>
    <tr><td>uaa</td><td>76.8.0</td><td></td></tr>
  </tbody>
</table>

## <a id='new-features'></a> New features in <%= vars.app_runtime_abbr %> <%= vars.v_major_version %>

<%= vars.app_runtime_abbr %> <%= vars.v_major_version %> includes the following major features:

### App syslog drains now support Mutual TLS and internal Certificate Authorities

When you upgrade to <%= vars.app_runtime_abbr %> <%= vars.v_major_version %> it opens up more security options
for application syslog drains. Syslog drains are now compatible with syslog servers.

Syslog drains help:

* Enforce client identity
* Have their own internal or domain-specific certificate authority

You can configure your syslog drains to use Mutual TLS by specifying a client certificate and a
private key. You can also configure your syslog drains to communicate with syslog servers by using
internal or domain specific Certificate Authorities (CA).

For example:

<pre class="terminal">
$ cf create-user-provided-service DRAIN-NAME -l SYSLOG-URL -p {"cert":"-----BEGIN CERTIFICATE-----\nMIIH...-----END CERTIFICATE-----","key":"-----BEGIN PRIVATE KEY-----\nMIIE...-----END PRIVATE KEY-----", "ca":"-----BEGIN CERTIFICATE-----\nMIIH...-----END CERTIFICATE-----"}
</pre>

### Dynamic App renaming for logs and metrics

If you rename your apps, you can see emitted logs and metrics that are tagged with the new
application name without starting the application again. This is useful in blue or green
deployments.

<p class='note'><strong>Note:</strong> This feature does not extend to the updated <code>VCAP_APPLICATION</code> environment variable that is provided to containers by the platform. If you need this environment variable to contain the new name of the application, you must still restart those applications after you rename them.</p>

Depending on your configuration, app name caching  can be performed outside of <%=
vars.app_runtime_abbr %> by other products such as Splunk Nozzle.

For applications hosted on Diego Cells that are provided by the <%= vars.segment_runtime_full %>
<%= vars.windows_runtime_abbr %> tiles, you must update those tiles to <%= vars.v_major_version
%> to get the full benefit of this new feature. After you upgrade <%= vars.app_runtime_abbr %>, the access log entries are generated by the <%= vars.app_runtime_abbr %> and <%=
vars.segment_runtime_full %> Gorouters. They reflect the new application names even if you have not upgraded the <%= vars.segment_runtime_full %> or <%= vars.windows_runtime_abbr %> tiles.

## <a id='breaking-changes'></a> Breaking Changes

<%= vars.app_runtime_abbr %> <%= vars.v_major_version %> includes the following breaking changes:

### Component logs always use human-readable RFC3339 timestamp format

Non-standardized and non-human readable timestamps in logs make debugging <%= vars.app_runtime_abbr
%> more difficult. Since <%= vars.app_runtime_abbr %> 2.10.0, there was an option in the **System
Logging** tab named **Optionally Use Human-Readable Timestamps for Component Logs**. In <%=
vars.app_runtime_abbr %> 4.0, this radio button is removed and all components use the human-readable
RFC3339 format for the timestamps in their logs.

### Max request header size now defaults to 48 KB

When you Upgrade to <%= vars.app_runtime_abbr %> 4.0 it sets the **Max request header size in KB** to 48 KB,
unless the existing configuration was already lower. Lowering this value establishes a better
security for <%= vars.app_runtime_abbr %> and applications. You can still configure this setting to
a value up to 1024 KB in the **Networking** tab. For any requests with headers larger than this value, returns a 431 status code.

To update a single Gorouter configuration, add the following line to the file:

<pre class="terminal">
/var/vcap/jobs/gorouter/config/gorouter.yml
max_header_kb: 48
</pre>

To monitor Gorouter access logs in the `/var/vcap/sys/log/gorouter/access.log` file, verify that
there are no entries with the HTTP/1.1 431 status code.

### Recent logs endpoint is removed from Traffic Controller

New versions of Traffic Controller do not have the recent logs endpoint. Versions of
the cf CLI before v6.52.0 cannot retrieve logs when they are called using the `cf logs --recent` command.

### Add validation for Certificate Authorities trusted by the Gorouter property

<%= vars.app_runtime_abbr %> 4.0 contains validations for the Certificate Authorities that are
trusted by the Gorouter property in the **Networking** tab. Any entries that are not valid CA
certificates can cause an error in Ops Manager. You must remove or replace invalid entries.

### Option to enable (deprecated) Global Log Rate Limit is removed

This feature was in beta until <%= vars.app_runtime_abbr %> 3.0, when it was deprecated. For
details, see [<%= vars.app_runtime_abbr %> 3.0 Release
Notes](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/3.0/tas-for-vms/runtime-rn.html#global-log-rate-limit-is-deprecated-24).

For more information on app log rate limits, see [App Log Rate
Feature](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/3.0/tas-for-vms/runtime-rn.html#app-log-rate-limits-for-orgs-spaces-and-individual-apps-14).
The option to activate this feature has now been removed, and you must apply app log rate limits
instead.
<p class="note"><strong>Note:</strong> If you were using this feature to limit your overall app log throughput, then you might
see an increase in log load after you upgrade. </p>
To mitigate the increased log load problem, you can either:

* Scale up your logging system before upgrading to TAS v4.0 to compensate for the increased log
  load.

  Or

* Upgrade to <%= vars.app_runtime_abbr %> 3.0 first to set app-level log rate limits while retaining
  the global log rate limit. For more details, see [App Log Rate
  Limits](https://docs.vmware.com/en/VMware-Tanzu-Application-Service/4.0/tas-for-vms/app-log-rate-limits.html).

### Ruby and Python have been removed from the cflinuxfs4 stack

The cflinuxfs4 stack versions prior to v1.0.0 contain both Ruby and Python interpreters. These exist to enable the execution of the PHP and Java buildpacks that are written in those languages. To improve the security posture for all applications based on cflinuxfs4, the Ruby and Python interpreters have been removed from the stack. New versions of the PHP and Java buildpacks have been introduced to run on top of the stack if it no longer includes the required interpreter. These include:

* cfslinuxfs4 - v1.2.0
* Java buildpack - v4.56

Any buildpacks outside of those maintained by VMware and installed as part of TAS for VMs that might be written in either Ruby or Python could now break unless those other buildpacks take steps to bring their own runtimes.

This breaking change applies to Tanzu Application Service and Small Footprint TAS.

## <a id='known-issues'></a> Known Issues

<%= vars.app_runtime_abbr %> <%= vars.v_major_version %> includes the following known issues:

### <a id='stale-route-pruning'></a> Stale routes might not be pruned properly in Gorouter

This version of TAS for VMs contains a known issue with Gorouter error handling for backend app requests. Failures that previously returned HTTP Status Codes 496, 499, 503, 525, or 526 may instead return 502. Additionally, stale routes may fail to be pruned properly, which could result in apps unexpectedly returning HTTP Status Code 502.

For more information, see the [Knowledge Base Article](https://community.pivotal.io/s/article/TAS-and-Isolation-Segment-with-routing-release-0-259-0-is?language=en_US)

### <a id='stemcell-certification'></a> Stemcell compliance certification

The Ubuntu 22.04 long-term support (LTS) stemcell, Jammy Jellyfish, is not currently CIS or
STIG-certified.

### <a id='uaa-sso-copy'></a> UAA Single Sign-On Copy button is broken

In the User Account and Authentication (UAA) user interface (UI), the button that copies Single
Sign-On (SSO) codes does not work.

To work around this issue, you must manually copy and paste the displayed code.

### <a id='dynamic-asgs-v2-api'></a> Dynamic ASG Updates require the use of Cloud Foundry v3 API for external integrations

Any external integrations with the CF API to create, update, and delete Application Security Group
(ASG) definitions or bindings require the use of the Cloud Foundry v3 API. Any ASG updates made with
the v2 API are not synchronized until an ASG update using the v3 API is made.

Recommended course of action:

1. Verify that the integration uses the latest CF CLI binary, which already uses the v3 API
   endpoints.
2. Update any HTTP based integrations to use the [v3 API endpoints for security
   groups](http://v3-apidocs.cloudfoundry.org/version/3.128.0/index.html#security-groups).

### <a id='dynamic-renaming-silk-log-line'></a> Dynamic App renaming does not take effect For Silk Security Group log entries

Silk emits log entries to application log streams when ASGs are dynamically changed. If you use Silk
for container networking and have enabled Dynamic ASGs, you might find the log entries are tagged
with old application names.

To mitigate this issue, you can restart the applications after they are renamed.

### <a id='check-nats-server-version'></a> Check your NATS server version

In <%= vars.app_runtime_abbr %> 2.11.26, VMware introduced a `nats` release that replaced the
underlying package from NATS v1.0 with NATS v2.0. <%= vars.app_runtime_abbr %>. Version 4.0 is the first LTS
version that includes NATS v2.0. The migration happens invisibly. However, if the migration is not
successful, your NATS servers might still be running NATS v1.0.

As described in the [TAS Support Lifecycle
Policy](https://docs.pivotal.io/application-service/3-0/release-notes/runtime-rn.html#support-policy),
VMware keeps the NATS v1.0 as a fallback, but removes it in a future version. Follow the
instructions in this [Knowledge Base
article](https://community.pivotal.io/s/article/How-to-confirm-your-nats-servers-are-running-NATs-v2?language=en_US)
to confirm that your `nats` instances have migrated successfully, and learn how to troubleshoot if
they have not.
